(()=>{"use strict";const e=["A","B","C","D","E","F","G","H","I","J"];function t(e,t,n,l,r){let o=e.parentNode,s=o.childNodes[n-1];if(function(e,t,n){let l;l="hori"===n?e.parentNode:e;for(let e=1;e<t;e++){if(null===l.nextElementSibling)return!1;l=l.nextElementSibling}return!0}(e,t,r))for(let e=0;e<t;e++)s.style.backgroundColor="in"===l?"white":"black","hori"===r?(o=o.nextElementSibling,e!==t-1&&(s=o.childNodes[n-1])):s=s.nextElementSibling}!function(t){const n=document.querySelector(".gameboard");for(let t=0;t<10;t++){const l=document.createElement("div");l.className=`${e[t]}`,n.appendChild(l);for(let n=1;n<=10;n++){const r=document.createElement("div");r.className=`sq-${e[t]}${n}`,r.textContent=`${e[t]}${n}`,l.appendChild(r)}}}();const n="vert";document.querySelectorAll("[class*=sq").forEach((e=>{e.addEventListener("mouseenter",(e=>{let l,r=e.target.className;l=6===r.length?r.substring(r.length-2):r.charAt(r.length-1),t(e.target,4,l,"in",n)})),e.addEventListener("mouseleave",(e=>{let l,r=e.target.className;l=6===r.length?r.substring(r.length-2):r.charAt(r.length-1),t(e.target,4,l,"out",n)}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFBUyxDQUFDLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLEtBaUI3RCxTQUFTQyxFQUFhQyxFQUFJQyxFQUFRQyxFQUFPQyxFQUFPQyxHQUM1QyxJQUFJQyxFQUFTTCxFQUFHTSxXQUNaQyxFQUFhRixFQUFPRyxXQUFXTixFQUFRLEdBQzNDLEdBY0osU0FBbUJGLEVBQUlDLEVBQVFHLEdBQzNCLElBQUlLLEVBQ2FBLEVBQVQsU0FBUkwsRUFBd0JKLEVBQUdNLFdBQW9CTixFQUMvQyxJQUFJLElBQUlVLEVBQUksRUFBR0EsRUFBSVQsRUFBUVMsSUFBSyxDQUM1QixHQUErQixPQUE1QkQsRUFBS0UsbUJBQTZCLE9BQU8sRUFDdkNGLEVBQU9BLEVBQUtFLGtCQUNyQixDQUNBLE9BQU8sQ0FDWCxDQXRCT0MsQ0FBVVosRUFBSUMsRUFBUUcsR0FDckIsSUFBSSxJQUFJTSxFQUFJLEVBQUdBLEVBQUlULEVBQVFTLElBQ05ILEVBQVdNLE1BQU1DLGdCQUF4QixPQUFWWCxFQUFvRCxRQUE2QyxRQUN0RixTQUFSQyxHQUNDQyxFQUFTQSxFQUFPTSxtQkFDYkQsSUFBTVQsRUFBUyxJQUFHTSxFQUFhRixFQUFPRyxXQUFXTixFQUFRLEtBRTVESyxFQUFhQSxFQUFXSSxrQkFLeEMsRUE5QkEsU0FBb0JYLEdBQ2hCLE1BQU1lLEVDRFFDLFNBQVNDLGNBQWMsY0RFckMsSUFBSSxJQUFJQyxFQUFNLEVBQUdBLEVBQU0sR0FBSUEsSUFBTyxDQUM5QixNQUFNQyxFQUFPSCxTQUFTSSxjQUFjLE9BQ3BDRCxFQUFLRSxVQUFZLEdBQUd2QixFQUFPb0IsS0FDM0JILEVBQVVPLFlBQVlILEdBQ3RCLElBQUksSUFBSUksRUFBTSxFQUFHQSxHQUFPLEdBQUlBLElBQU8sQ0FDL0IsTUFBTUMsRUFBU1IsU0FBU0ksY0FBYyxPQUN0Q0ksRUFBT0gsVUFBWSxNQUFNdkIsRUFBT29CLEtBQU9LLElBQ3ZDQyxFQUFPQyxZQUFjLEdBQUczQixFQUFPb0IsS0FBT0ssSUFDdENKLEVBQUtHLFlBQVlFLEVBQ3JCLENBQ0osQ0FDSixDQ1hBRSxHQUVBLE1BQ01DLEVBQVksT0FFTFgsU0FBU1ksaUJBQWlCLGNBQ2xDQyxTQUFRQyxJQUNUQSxFQUFHQyxpQkFBaUIsY0FBZUMsSUFDL0IsSUFDSTlCLEVBREFtQixFQUFZVyxFQUFFQyxPQUFPWixVQUVBbkIsRUFBSixJQUFyQm1CLEVBQVVwQixPQUF1Qm9CLEVBQVVhLFVBQVViLEVBQVVwQixPQUFTLEdBQWFvQixFQUFVYyxPQUFPZCxFQUFVcEIsT0FBUyxHQUN6SEYsRUFBYWlDLEVBQUVDLE9BVFIsRUFTd0IvQixFQUFPLEtBQU15QixFQUFVLElBRzFERyxFQUFHQyxpQkFBaUIsY0FBZUMsSUFDL0IsSUFDSTlCLEVBREFtQixFQUFZVyxFQUFFQyxPQUFPWixVQUVBbkIsRUFBSixJQUFyQm1CLEVBQVVwQixPQUF1Qm9CLEVBQVVhLFVBQVViLEVBQVVwQixPQUFTLEdBQWFvQixFQUFVYyxPQUFPZCxFQUFVcEIsT0FBUyxHQUN6SEYsRUFBYWlDLEVBQUVDLE9BaEJSLEVBZ0J3Qi9CLEVBQU8sTUFBT3lCLEVBQVUsR0FDMUQsRyIsInNvdXJjZXMiOlsid2VicGFjazovL2JhdHRsZS1zaGlwLy4vc3JjL2dyaWQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlLXNoaXAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbGV0dGVyID0gW1wiQVwiLCBcIkJcIiwgXCJDXCIsIFwiRFwiLCBcIkVcIiwgXCJGXCIsIFwiR1wiLCBcIkhcIiwgXCJJXCIsIFwiSlwiXTtcblxuZnVuY3Rpb24gcmVuZGVyR3JpZChlbCkge1xuICAgIGNvbnN0IGdhbWVib2FyZCA9IGVsO1xuICAgIGZvcihsZXQgY29sID0gMDsgY29sIDwgMTA7IGNvbCsrKSB7XG4gICAgICAgIGNvbnN0IHRlc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICB0ZXN0LmNsYXNzTmFtZSA9IGAke2xldHRlcltjb2xdfWA7XG4gICAgICAgIGdhbWVib2FyZC5hcHBlbmRDaGlsZCh0ZXN0KTtcbiAgICAgICAgZm9yKGxldCByb3cgPSAxOyByb3cgPD0gMTA7IHJvdysrKSB7XG4gICAgICAgICAgICBjb25zdCBzcXVhcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgc3F1YXJlLmNsYXNzTmFtZSA9IGBzcS0ke2xldHRlcltjb2xdfSR7cm93fWA7XG4gICAgICAgICAgICBzcXVhcmUudGV4dENvbnRlbnQgPSBgJHtsZXR0ZXJbY29sXX0ke3Jvd31gO1xuICAgICAgICAgICAgdGVzdC5hcHBlbmRDaGlsZChzcXVhcmUpO1xuICAgICAgICB9O1xuICAgIH07XG59O1xuXG5mdW5jdGlvbiBncmlkU2VsZWN0b3IoZWwsIGxlbmd0aCwgaW5kZXgsIGV2ZW50LCBkaXIpIHtcbiAgICBsZXQgcGFyZW50ID0gZWwucGFyZW50Tm9kZTtcbiAgICBsZXQgZmlyc3RDaGlsZCA9IHBhcmVudC5jaGlsZE5vZGVzW2luZGV4IC0gMV07XG4gICAgaWYoZ3JpZEV4aXN0KGVsLCBsZW5ndGgsIGRpcikpIHtcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBldmVudCA9PT0gXCJpblwiID8gZmlyc3RDaGlsZC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIndoaXRlXCIgOiBmaXJzdENoaWxkLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiYmxhY2tcIlxuICAgICAgICAgICAgaWYoZGlyID09PSBcImhvcmlcIikge1xuICAgICAgICAgICAgICAgIHBhcmVudCA9IHBhcmVudC5uZXh0RWxlbWVudFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgaWYoaSAhPT0gbGVuZ3RoIC0gMSkgZmlyc3RDaGlsZCA9IHBhcmVudC5jaGlsZE5vZGVzW2luZGV4IC0gMV07XG4gICAgICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgICAgICAgZmlyc3RDaGlsZCA9IGZpcnN0Q2hpbGQubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG59XG5cbmZ1bmN0aW9uIGdyaWRFeGlzdChlbCwgbGVuZ3RoLCBkaXIpIHtcbiAgICBsZXQgbm9kZTtcbiAgICBkaXIgPT09IFwiaG9yaVwiID8gbm9kZSA9IGVsLnBhcmVudE5vZGUgOiBub2RlID0gZWw7XG4gICAgZm9yKGxldCBpID0gMTsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmKG5vZGUubmV4dEVsZW1lbnRTaWJsaW5nID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIGVsc2Ugbm9kZSA9IG5vZGUubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IHtyZW5kZXJHcmlkLCBncmlkU2VsZWN0b3J9OyIsImltcG9ydCB7IHJlbmRlckdyaWQsIGdyaWRTZWxlY3Rvcn0gZnJvbSBcIi4vZ3JpZFwiO1xuXG5jb25zdCBnYW1lYm9hcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmdhbWVib2FyZFwiKTtcblxucmVuZGVyR3JpZChnYW1lYm9hcmQpO1xuXG5jb25zdCBsZW5ndGggPSA0O1xuY29uc3QgZGlyZWN0aW9uID0gXCJ2ZXJ0XCI7XG5cbmNvbnN0IGdyaWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2NsYXNzKj1zcVwiKTtcbmdyaWQuZm9yRWFjaChzcSA9PiB7XG4gICAgc3EuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgKGUpID0+IHtcbiAgICAgICAgbGV0IGNsYXNzTmFtZSA9IGUudGFyZ2V0LmNsYXNzTmFtZTtcbiAgICAgICAgbGV0IGluZGV4OyBcbiAgICAgICAgY2xhc3NOYW1lLmxlbmd0aCA9PT0gNiA/IGluZGV4ID0gY2xhc3NOYW1lLnN1YnN0cmluZyhjbGFzc05hbWUubGVuZ3RoIC0gMikgOiBpbmRleCA9IGNsYXNzTmFtZS5jaGFyQXQoY2xhc3NOYW1lLmxlbmd0aCAtIDEpO1xuICAgICAgICBncmlkU2VsZWN0b3IoZS50YXJnZXQsIGxlbmd0aCwgaW5kZXgsIFwiaW5cIiwgZGlyZWN0aW9uKTtcbiAgICAgICAgXG4gICAgfSlcbiAgICBzcS5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLCAoZSkgPT4ge1xuICAgICAgICBsZXQgY2xhc3NOYW1lID0gZS50YXJnZXQuY2xhc3NOYW1lO1xuICAgICAgICBsZXQgaW5kZXg7XG4gICAgICAgIGNsYXNzTmFtZS5sZW5ndGggPT09IDYgPyBpbmRleCA9IGNsYXNzTmFtZS5zdWJzdHJpbmcoY2xhc3NOYW1lLmxlbmd0aCAtIDIpIDogaW5kZXggPSBjbGFzc05hbWUuY2hhckF0KGNsYXNzTmFtZS5sZW5ndGggLSAxKTtcbiAgICAgICAgZ3JpZFNlbGVjdG9yKGUudGFyZ2V0LCBsZW5ndGgsIGluZGV4LCBcIm91dFwiLCBkaXJlY3Rpb24pO1xuICAgIH0pXG59KVxuXG4iXSwibmFtZXMiOlsibGV0dGVyIiwiZ3JpZFNlbGVjdG9yIiwiZWwiLCJsZW5ndGgiLCJpbmRleCIsImV2ZW50IiwiZGlyIiwicGFyZW50IiwicGFyZW50Tm9kZSIsImZpcnN0Q2hpbGQiLCJjaGlsZE5vZGVzIiwibm9kZSIsImkiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJncmlkRXhpc3QiLCJzdHlsZSIsImJhY2tncm91bmRDb2xvciIsImdhbWVib2FyZCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbCIsInRlc3QiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiYXBwZW5kQ2hpbGQiLCJyb3ciLCJzcXVhcmUiLCJ0ZXh0Q29udGVudCIsInJlbmRlckdyaWQiLCJkaXJlY3Rpb24iLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsInNxIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJ0YXJnZXQiLCJzdWJzdHJpbmciLCJjaGFyQXQiXSwic291cmNlUm9vdCI6IiJ9